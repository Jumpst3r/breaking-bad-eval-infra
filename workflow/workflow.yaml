kind: Workflow
metadata:
  generateName: builder-
spec:
  entrypoint: schedule-framework-builds
  imagePullSecrets:
  - name: regcred2
  arguments:
    parameters:
    - name: buildmap
      value: |
        [
          {
              "toolchain": "armv7-eabihf--glibc--stable-2018.11-1",
              "framework": "wolfssl",
              "commit": "f401a3b53ddd531b848caf635feeb87103625b3d",
              "optlvl": "-Os"
          },
          {
              "toolchain": "armv7-eabihf--glibc--stable-2018.11-1",
              "framework": "wolfssl",
              "commit": "f401a3b53ddd531b848caf635feeb87103625b3d",
              "optlvl": "-O3"
          }
        ]
    - name: algomap
      value: |
        [
        {
            "algo": "camellia-cbc",
            "keylen": "128"
        }
        ]
  templates:
  - name: schedule-framework-builds
    parallelism: 2
    inputs:
      parameters:
      - name: buildmap
      - name: algomap
    steps:
    - - name: schedule-build
        template: schedule-build
        continueOn:
          failed: true
        arguments:
          parameters:
          - name: toolchain
            value: "{{item.toolchain}}"
          - name: framework
            value: "{{item.framework}}"
          - name: commit
            value: "{{item.commit}}"
          - name: optlvl
            value: "{{item.optlvl}}"
          - name: algomap
            value: "{{inputs.parameters.algomap}}"
        withParam: "{{inputs.parameters.buildmap}}"
    - - name: reduce-global
        template: reduce-global
        arguments:
          parameters:
            - name: jsonlist
              value: "{{steps.schedule-build.outputs.parameters.json}}"

  - name: schedule-build
    parallelism: 2
    inputs:
      parameters:
      - name: toolchain
      - name: framework
      - name: commit
      - name: optlvl
      - name: algomap
    steps:
    - - name: schedule
        template: build
        continueOn:
          failed: true
        arguments:
          parameters:
          - name: toolchain
            value: "{{inputs.parameters.toolchain}}"
          - name: framework
            value: "{{inputs.parameters.framework}}"
          - name: commit
            value: "{{inputs.parameters.commit}}"
          - name: optlvl
            value: "{{inputs.parameters.optlvl}}"
          - name: algorithm
            value: "{{item.algo}}"
          - name: keylen
            value: "{{item.keylen}}"
        withParam: "{{inputs.parameters.algomap}}"
    - - name: reduce-framework
        template: reduce-framework
        continueOn:
          failed: true
        arguments:
          parameters:
          - name: leaks
            value: "{{steps.schedule.outputs.parameters.leaks}}"
          - name: toolchain
            value: "{{inputs.parameters.toolchain}}"
          - name: framework
            value: "{{inputs.parameters.framework}}"
          - name: commit
            value: "{{inputs.parameters.commit}}"
          - name: optlvl
            value: "{{inputs.parameters.optlvl}}"
          - name: algomap
            value: "{{inputs.parameters.algomap}}" 
    outputs:
      parameters:
      - name: json
        valueFrom: 
          parameter: "{{steps.reduce-framework.outputs.parameters.json}}"


  - name: build
    inputs:
      parameters:
      - name: toolchain
      - name: framework
      - name: commit
      - name: optlvl
      - name: algorithm
      - name: keylen
    container:
      image: jumpst3r/builder
      command:
          - bash
          - '-c'
      args:
          - >-
            python3 builder.py {{inputs.parameters.toolchain}} {{inputs.parameters.framework}} {{inputs.parameters.commit}} {{inputs.parameters.optlvl}} {{inputs.parameters.algorithm}} {{inputs.parameters.keylen}}
    outputs:
      artifacts:
      - name: results
        path: /build/results.zip
      parameters:
      - name: leaks
        valueFrom:
          path: /tmp/summary.json

  - name: reduce-framework
    inputs:
      parameters:
      - name: leaks
      - name: toolchain
      - name: framework
      - name: commit
      - name: optlvl
      - name: algomap
    script:
      image: python:alpine3.6
      command: [python]
      source: |
        import json
        import re
        print(type({{inputs.parameters.leaks}}))
        rawleaks = r'{{inputs.parameters.leaks}}'
        rawleaks = rawleaks.replace('\\"', '|')
        rawleaks = rawleaks.replace('"', '')
        rawleaks = rawleaks.replace('|', '"')
        print(rawleaks)

        leaks = json.loads(rawleaks)
        algs = json.loads(str({{inputs.parameters.algomap}}).replace("'", '"'))
        toolchain = "{{inputs.parameters.toolchain}}".strip()
        framework = "{{inputs.parameters.framework}}".strip()
        commit = "{{inputs.parameters.commit}}".strip()
        optlvl = "{{inputs.parameters.optlvl}}".strip()

        larray = []
        for idx,l in enumerate(leaks):
            robj = {}
            robj['algorithm'] = algs[idx]['algo']
            robj['keylen'] = algs[idx]['keylen']
            robj['leaks'] = l
            larray.append(robj)


        result = {}
        result['toolchain'] = toolchain
        result['framework'] = framework
        result['commit'] = commit
        result['optlvl'] = optlvl
        result['results'] = larray


        with open('/tmp/result.json', 'w') as f: 
            json.dump(result,f)
    outputs:
      parameters:
      - name: json
        valueFrom:
          path: /tmp/result.json

  - name: reduce-global
    inputs:
      parameters:
      - name: jsonlist
    script:
      image: python:alpine3.6
      command: [python]
      source: |
        import json
        rawleaks = r'{{inputs.parameters.jsonlist}}'
        rawleaks = rawleaks.replace('\\"', '|')
        rawleaks = rawleaks.replace('"', '')
        rawleaks = rawleaks.replace('|', '"')
        li = json.loads(rawleaks)
        with open('/tmp/result.json', 'w') as f: 
            json.dump(li,f)
    outputs:
      artifacts:
      - name: results
        path: /tmp/result.json
      parameters:
      - name: results
        valueFrom:
          path: /tmp/result.json

      